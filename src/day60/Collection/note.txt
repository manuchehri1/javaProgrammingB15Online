*
* The word Collection everywhere :
*
*
* Collection Framework -->> referring entire things , entire topic
*
* Collection Interface --->> one interface under the entire Collection Framework
*
* Collections class  -->> (it has s at the end, just like Array and Arrays )
*                   -->>  is a utility class with many static methods
*                 for example : Collections.sort(your collection object1)
*
*
* */

Common data processing in real life
Scenario 1 :
If I ask you tell me your state so I can store :
	first I did not care about duplicates
 I would just created a List and keep adding all your state into it
Scenario 2 :
 	then I realize there are many students from same states
 	and I want to only store the unique states you are from
so I need some kind of data structure already does it for me
so I dont have to use bunch of if statements to handle it
	Set interface is a data structure for unique element
	if I wanted to keep the sorted order
		SortedSet
Scenario 3 :
	now I want to actually store the student-state pair
	so i can get the state by student name :
	Michael : Virginia
	Map interface
	if I wanted to keep the sorted order
		SortedMap
Scenario 4 :
	I want to answer the questions I got from the students
	but I want to answer them in the order I received
	so First come first serve based !!
	Queue
--- to be continued in details starting from List interface